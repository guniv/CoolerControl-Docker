name: Build Docker Image
permissions:
  contents: read
  pull-requests: write

on:
  schedule:
    - cron: '0 * * * *'  # Check GitLab releases hourly
  push:
    branches:
      - main

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.CR_PAT }}

      # Fetch GitLab tag (runs on schedule; skips if triggered by push)
      - name: Get Latest GitLab Tag
        if: github.event_name == 'schedule'
        id: get-tag
        run: |
          PROJECT_ID="30707566"
          LATEST_TAG=$(curl -s "https://gitlab.com/api/v4/projects/$PROJECT_ID/repository/tags" | jq -r '.[0].name')
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_OUTPUT

      # Determine if a build is needed
      - name: Check Build Condition
        id: check-build
        run: |
          # Always build on push
          if [[ "${{ github.event_name }}" == "push" ]]; then
            echo "BUILD=true" >> $GITHUB_OUTPUT
            echo "UPDATE_TRACKER=false" >> $GITHUB_OUTPUT
          else
            # Check GitLab tag on schedule
            if [ -f last_release.txt ]; then
              LAST_BUILT=$(cat last_release.txt)
            else
              LAST_BUILT=""
            fi
            if [[ "${{ steps.get-tag.outputs.LATEST_TAG }}" != "$LAST_BUILT" ]]; then
              echo "BUILD=true" >> $GITHUB_OUTPUT
              echo "UPDATE_TRACKER=true" >> $GITHUB_OUTPUT
            else
              echo "BUILD=false" >> $GITHUB_OUTPUT
              echo "UPDATE_TRACKER=false" >> $GITHUB_OUTPUT
            fi
          fi

      # Build steps (run if BUILD=true)
      - name: Set up Docker Buildx
        if: steps.check-build.outputs.BUILD == 'true'
        uses: docker/setup-buildx-action@v2

      - name: Create Cache Directory
        if: steps.check-build.outputs.BUILD == 'true'
        run: mkdir -p ~/.cache/docker

      - name: Cache Docker layers
        if: steps.check-build.outputs.BUILD == 'true'
        uses: actions/cache@v3
        with:
          path: ~/.cache/docker
          key: ${{ runner.os }}-docker-cache-${{ hashFiles('Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-cache-

      - name: Log in to GitHub Container Registry
        if: steps.check-build.outputs.BUILD == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and Push Docker Image
        if: steps.check-build.outputs.BUILD == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/guniv/coolercontrol-docker:latest
          cache-from: type=local,src=~/.cache/docker
          cache-to: type=local,dest=~/.cache/docker

      # Update tracker only for scheduled runs with new GitLab tags
      - name: Update Release Tracker
        if: steps.check-build.outputs.UPDATE_TRACKER == 'true'
        run: |
          echo "${{ steps.get-tag.outputs.LATEST_TAG }}" > last_release.txt
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add last_release.txt
          git commit -m "Update to ${{ steps.get-tag.outputs.LATEST_TAG }}"
          git push https://${{ github.actor }}:${{ secrets.CR_PAT }}@github.com/${{ github.repository }}.git HEAD:main
