name: Build and Release Docker Image
permissions:
  contents: write  # Needed for creating releases
  packages: write  # Needed for pushing Docker images

on:
  schedule:
    - cron: '0 11 * * *' #Check once a day for new versions
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - 'entrypoint.sh'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: guniv/coolercontrol-docker
  PROJECT_ID: 30707566  # Your GitLab project ID

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for full commit history

      - name: Version Setup
        id: version
        env:
          GH_TOKEN: ${{ github.token }}  # Use automatic token
        run: |
          # Get upstream version
          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            UPSTREAM_TAG=$(curl -s "https://gitlab.com/api/v4/projects/$PROJECT_ID/repository/tags" | jq -r '.[0].name')
            IS_NEW_UPSTREAM=true
          else
            UPSTREAM_TAG=$(cat last_release.txt || echo "v0.0.0")
            IS_NEW_UPSTREAM=false
          fi

          # Get Docker build number
          DOCKER_BUILD=1
          RELEASES=$(gh release list --exclude-drafts --exclude-pre-releases -L 50)
          while grep -q "^${UPSTREAM_TAG}-docker${DOCKER_BUILD}\b" <<< "$RELEASES"; do
            ((DOCKER_BUILD++))
          done

          echo "UPSTREAM_VERSION=$UPSTREAM_TAG" >> $GITHUB_OUTPUT
          echo "DOCKER_BUILD=$DOCKER_BUILD" >> $GITHUB_OUTPUT
          echo "IS_NEW_UPSTREAM=$IS_NEW_UPSTREAM" >> $GITHUB_OUTPUT

      # Rest of your workflow remains the same...
