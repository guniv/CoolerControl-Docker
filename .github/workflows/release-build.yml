name: Check GitLab Releases

on:
  schedule:
    - cron: '0 * * * *'  # Runs every hour

jobs:
  check-release:
    runs-on: ubuntu-latest
    steps:
      - name: Get Latest GitLab Release
        id: get-release
        run: |
          LATEST=$(curl -s "https://gitlab.com/api/v4/projects/30707566/releases/permalink/latest" | jq -r .tag_name)
          echo "LATEST_RELEASE=$LATEST" >> $GITHUB_OUTPUT

      - name: Compare with Last Built Version
        id: compare
        run: |
          # Fetch the last built version from a file (e.g., last_release.txt)
          git fetch origin main
          LAST_BUILT=$(git show origin/main:last_release.txt)
          if [[ "${{ steps.get-release.outputs.LATEST_RELEASE }}" != "$LAST_BUILT" ]]; then
            echo "NEW_RELEASE=true" >> $GITHUB_OUTPUT
          fi

      - name: Build Docker Image if New Release
        if: steps.compare.outputs.NEW_RELEASE == 'true'
        run: |
          # Add steps to build and push the Docker image here
          echo "New release detected: ${{ steps.get-release.outputs.LATEST_RELEASE }}"

          # Update last_release.txt
          echo "${{ steps.get-release.outputs.LATEST_RELEASE }}" > last_release.txt
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add last_release.txt
          git commit -m "Update to ${{ steps.get-release.outputs.LATEST_RELEASE }}"
          git push
